#include "lookUpTable.h"

int angleTable[360] = 
{
    0,  182, 364, 546, 728, 910, 1092, 1274,
    1456, 1638, 1820, 2002, 2185, 2367, 2549, 2731,
    2913, 3095, 3277, 3459, 3641, 3823, 4005, 4187,
    4369, 4551, 4733, 4915, 5097, 5279, 5461, 5643,
    5825, 6007, 6190, 6372, 6554, 6736, 6918, 7100,
    7282, 7464, 7646, 7828, 8010, 8192, 8374, 8556,
    8738, 8920, 9102, 9284, 9466, 9648, 9830, 10012,
    10194, 10377, 10559, 10741, 10923, 11105, 11287, 11469,
    11651, 11833, 12015, 12197, 12379, 12561, 12743, 12925,
    13107, 13289, 13471, 13653, 13835, 14017, 14199, 14382,
    14564, 14746, 14928, 15110, 15292, 15474, 15656, 15838,
    16020, 16202, 16384, 16566, 16748, 16930, 17112, 17294,
    17476, 17658, 17840, 18022, 18204, 18386, 18569, 18751,
    18933, 19115, 19297, 19479, 19661, 19843, 20025, 20207,
    20389, 20571, 20753, 20935, 21117, 21299, 21481, 21663,
    21845, 22027, 22209, 22391, 22574, 22756, 22938, 23120,
    23302, 23484, 23666, 23848, 24030, 24212, 24394, 24576,
    24758, 24940, 25122, 25304, 25486, 25668, 25850, 26032,
    26214, 26396, 26578, 26761, 26943, 27125, 27307, 27489,
    27671, 27853, 28035, 28217, 28399, 28581, 28763, 28945,
    29127, 29309, 29491, 29673, 29855, 30037, 30219, 30401,
    30583, 30766, 30948, 31130, 31312, 31494, 31676, 31858,
    32040, 32222, 32404, 32586, 32768, 32950, 33132, 33314,
    33496, 33678, 33860, 34042, 34224, 34406, 34588, 34770,
    34953, 35135, 35317, 35499, 35681, 35863, 36045, 36227,
    36409, 36591, 36773, 36955, 37137, 37319, 37501, 37683,
    37865, 38047, 38229, 38411, 38593, 38775, 38958, 39140,
    39322, 39504, 39686, 39868, 40050, 40232, 40414, 40596,
    40778, 40960, 41142, 41324, 41506, 41688, 41870, 42052,
    42234, 42416, 42598, 42780, 42962, 43145, 43327, 43509,
    43691, 43873, 44055, 44237, 44419, 44601, 44783, 44965,
    45147, 45329, 45511, 45693, 45875, 46057, 46239, 46421,
    46603, 46785, 46967, 47150, 47332, 47514, 47696, 47878,
    48060, 48242, 48424, 48606, 48788, 48970, 49152, 49334,
    49516, 49698, 49880, 50062, 50244, 50426, 50608, 50790,
    50972, 51154, 51337, 51519, 51701, 51883, 52065, 52247,
    52429, 52611, 52793, 52975, 53157, 53339, 53521, 53703,
    53885, 54067, 54249, 54431, 54613, 54795, 54977, 55159,
    55342, 55524, 55706, 55888, 56070, 56252, 56434, 56616,
    56798, 56980, 57162, 57344, 57526, 57708, 57890, 58072,
    58254, 58436, 58618, 58800, 58982, 59164, 59346, 59529,
    59711, 59893, 60075, 60257, 60439, 60621, 60803, 60985,
    61167, 61349, 61531, 61713, 61895, 62077, 62259, 62441,
    62623, 62805, 62987, 63169, 63351, 63534, 63716, 63898,
    64080, 64262, 64444, 64626, 64808, 64990, 65172, 65354,
};

const float sineTable[91] =
{
    0.0f, 0.0174524f, 0.0348995f, 0.052336f, 0.0697565f, 0.0871557f, 0.104528, 0.121869f,
    0.139173f, 0.156434f, 0.173648f, 0.190809f, 0.207912f, 0.224951f, 0.241922f, 0.258819f,
    0.275637f, 0.292372f, 0.309017f, 0.325568f,  0.34202f, 0.358368f, 0.374607f, 0.390731f,
    0.406737f, 0.422618f, 0.438371f,  0.45399f, 0.469472f,  0.48481f,      0.5f, 0.515038f,
    0.529919f, 0.544639f, 0.559193f, 0.573576f, 0.587785f, 0.601815f, 0.615661f,  0.62932f,
    0.642788f, 0.656059f, 0.669131f, 0.681998f, 0.694658f, 0.707107f,  0.71934f, 0.731354f,
    0.743145f,  0.75471f, 0.766044f, 0.777146f, 0.788011f, 0.798636f, 0.809017f, 0.819152f,
    0.829038f, 0.838671f, 0.848048f, 0.857167f, 0.866025f,  0.87462f, 0.882948f, 0.891007f,
    0.898794f, 0.906308f, 0.913545f, 0.920505f, 0.927184f,  0.93358f, 0.939693f, 0.945519f,
    0.951057f, 0.956305f, 0.961262f, 0.965926f, 0.970296f,  0.97437f, 0.978148f, 0.981627f,
    0.984808f, 0.987688f, 0.990268f, 0.992546f, 0.994522f, 0.996195f, 0.997564f,  0.99863f,
    0.999391f, 0.999848f, 1.0f,
};

float GetSin(int x)
{
    while (x >= 360)
    {
        x-= 360;
    }
    while (x < 0)
    {
        x+= 360;
    }
    
    int y = x % 90;
    if (x < 90)
    {
        return sineTable[y];
    }
    if(x < 180)
    {
        return sineTable[90-y];
    }
    if(x < 270)
    {
        return -sineTable[y];
    }
    return -sineTable[90-y];
}

float GetCos(int x)
{
    return GetSin(x + 90);
}

float GetTan(int x)
{
    return GetSin(x) / GetCos(x);
}